demo()
q()
q()
q()
q()
1+2
a
a
a = 1+2
3*4
q()
install.packages("ggplot2")
install.packages("pacman")
install.packages(pacman)
install.packages('pacman')
require(pacman)
library(pacman)
pacman::p_load(pacman,dplyr,GGally,ggplot2,ggthemes,ggvis,httr,lubridate,plotly,rio,rmarkdown,shiny,stringr,tidyr)
cat('/014')
library(datasets)
p_unload(all)
installed.packages()
head(iris)
plot(iris~Species)
plot(iris~Species)
plot(iris$Species)
plot(iris$Petal.Length)
plot(iris$Species,iris$Petal.Length)
plot(iris$Species,iris$Petal.Width)
plot(iris$Petal.Length,iris$Petal.Width)
plot(iris$Species,iris$Petal.Width)
plot(iris$Species,iris$Petal.Width)
plot(iris$Petal.Length,iris$Petal.Width)
plot(iris$Petal.Length,iris$Petal.Width
col = 'red')
plot(iris$Petal.Length,iris$Petal.Width
col = 'red')
plot(iris$Petal.Length,iris$Petal.Width,
col = 'red')
plot(iris$Petal.Length,iris$Petal.Width,
col = Species)
plot(iris$Petal.Length,iris$Petal.Width)
plot(exp,1,5)
head(mtcars)
?mtcars
head(mtcars)
cylinders <- table(mtcars$cyl)
barplot(cylinders)
head(mtcars)
hist(mtcars$wt)
hist(mtcars$mpg)
plot(mtcars$wt,mtcars$mpg)
plot(mtcars$wt,mtcars$mpg,
main = 'Relationship between wt and mpg')
head(lynx)
?lynx
hist(lynx)
hist(lynx,
freq = False)
hist(lynx,
freq = FALSE)
hist(lynx,
freq = FALSE,
breaks = 14)
curve(dnorm(x,mean = mean(lynx), sd = sd(lynx))
add = TRUE)
curve(dnorm(x,mean=mean(lynx), sd=sd(lynx)),
add = TRUE)
head(iris)
summary(iris)
summary(iris$Species)
describe(iris)
p_load(psych)
pacman::p_load(pacman,dplyr,GGally,ggplot2,ggthemes,ggvis,httr,lubridate,plotly,rio,rmarkdown,shiny,stringr,tidyr)
p_load(psych)
describe(iris)
help(psych)
hist(iris$Petal.Length)
summary(iris$Petal.Length)
hist(iris$Petal.Length[iris$Species=='virginica'])
hist(iris$Petal.Length[iris$Species=='virginica'],
breaks = 10)
hist(iris$Petal.Length[iris$Species=='virginica'],
breaks = 10,
main = 'Virginica Length')
hist(iris$Petal.Length[iris$Species=='virginica'],
breaks = 10,
main = 'Virginica Petal Length')
hist(iris$Petal.Length[iris$Species=='virginica' & iris$Petal.Length < 5.5],
main = 'Virginica petals only')
i.setosa <- iris[iris$Species=='setosa',]
head(i.setosa)
hist(i.setosa$Sepal.Length)
x <- 1:3
y <- 1:9
df1 <- cbind.data.frame(x,y)
df1
2+2
q()
for (i in 1:10) print(i)
x <- c(4,2,5,9,2,9)
x
x[c(1,2)]
x[-1]
x
x[-(-1)]
x[x>3]
pacman::p_load(pacman,dplyr,GGally,ggplot2,ggthemes,ggvis,httr,lubridate,plotly,
rio,rmarkdown,shiny,stringr,tidyr,corrplot)
library(datasets)
answehead(iris)
head(iris)
pair(iris)
pairs(iris)
plot(iris)
pacman::p_load(pacman,dplyr,GGally,ggplot2,ggthemes,ggvis,httr,lubridate,plotly,
rio,rmarkdown,shiny,stringr,tidyr,corrplot)
library(datasets)
head(iris)
plot(iris$Sepal.Length ~ iris$Petal.Length)
length.lm <- lm(iris$Sepal.Length ~ iris$Petal.Length)
plot(length.lm)
length.lm
summary(length.lm)
par(mfrow=c(1,4), height=2)
par(mfrow=c(1,4))
plot(length.lm)
par(mfrow=c(1,1))
pacman::p_load(pacman,dplyr,GGally,ggplot2,ggthemes,ggvis,httr,lubridate,plotly,
rio,rmarkdown,shiny,stringr,tidyr,corrplot)
library(datasets)
head(iris)
filter(iris, Sepal.Length > 5.0)
pacman::p_load(pacman,dplyr,GGally,ggplot2,ggthemes,ggvis,httr,lubridate,plotly,
rio,rmarkdown,shiny,stringr,tidyr,corrplot)
library(datasets)
head(iris)
by_petal_length <- group_by(iris,Species)
by_petal_length
by_petal_length <- group_by(iris, Species)
by_petal_length
summ <- summarise(by_petal_length,
s.length = mean(Sepal.Length),
s.width = mean(Sepal.Width))
summ
by_sepal_length <- group_by(iris, Sepal.Length)
by_sepal_length
c = rnorm(10)
c
mean(c)
print('coding in R')
my_first_vector <- c("This","is","my","first","vector")
my_first_vector
today()
library(lubridate)
today()
now()
browseVignettes("packagename")
browseVignettes("ggplot2")
library(lubridate)
mdy("April 10th, 2019")
library(tidyverse)
data(mtcars)
data(mtcars)
library(mtcars)
cols(mtcars)
head(mtcars)
data(mtcars)
mtcars
read_csv(readr_example("mtcars.csv"))
install.packages("palmerpenguins")
library("palmerpenguins")
head(pamlemerpenguins)
head(palmerpenguins)
head("palmerpenguins")
palmerpenguins
palmerpenguins::
library(palmerpenguins)
data(package='palmerpenguins')
?penguins
head(penguins)
penguins %>%
arrange(bill_length_mm)
penguins >%>
arrange(bill_length_mm)
library(tidyverse)
penguins >%>
arrange(bill_length_mm)
penguins >%>
arrange(bill_length_mm)
penguins
colnames(penguins)
penguins >%>
arrange(bill_length_mm)
penguins >%>
arrange('bill_length_mm')
penguins2 <- penguins
penguins2 %>%
arrange(bill_length_mm)
penguins2 %>%
arrange(-bill_length_mm)
penguins2 %>% group_by(island) %>%
drop_na() %>%
summarize(mean_bill_length=mean(bill_length_mm))
id <- c(1:10)
name <- c("John Mendes", "Rob Stewart", "Rachel Abrahamson", "Christy Hickman", "Johnson Harper", "Candace Miller", "Carlson Landy", "Pansy Jordan", "Darius Berry", "Claudia Garcia")
job_title <- c("Professional", "Programmer", "Management", "Clerical", "Developer", "Programmer", "Management", "Clerical", "Developer", "Programmer")
employee <- data.frame(id, name, job_title)
print(employee)
separate(employee, name, into=c('first_name','last_name'), sep = ' ')
unite(employee,'name', first_name,last-name, sep = ' ')
unite(employee,'name', first_name,last_name, sep = ' ')
employee
employee <- data.frame(id,first_name,last_name,job_title)
separate(employee, name, into=c('first_name','last_name'), sep = ' ')
employee <- data.frame(id,first_name,last_name,job_title)
employee <- separate(employee, name, into=c('first_name','last_name'), sep = ' ')
employee
unite(employee,'name', first_name,last_name,sep=' ')
library("palmerpenguins")
head(palmerpenguins)
head("palmerpenguins")
library(ggplot2)
library(palmerpenguins)
data(penguins)
View(penguins)
ggplot(data = penguins) +
geom_point(mapping = aes(x = flipper_length_mm,y = body_mass_g))
library(tidyverse)
library(palmerpenguins)
data(penguins)
View(penguins)
ggplot(data=penguins) +
geom_point(mapping=aes(x=flipper_length_mm, y=body_mass_g))
install.packages("vitae")
library(vitae)
library(shiny)
library(shinydashboard)
runApp()
shinyUI( fluidPage(
titlePanel("My First App"),
sidebarLayout(
sidebarPanel(
h3("Sidebar Text")
),
mainPanel(
h3("Main Panel Text")
)
)
))
shinyServer(function(input,output) {
})
shinyApp(shinyUI,shinyServer)
runApp()
runApp()
runApp()
runApp()
runApp()
setwd("C:/Users/verdi/Downloads/Wellness_Tech/Fitabase Data 4.12.16-5.12.16")
library(tidyverse)
library(ggplot2)
library(lubridate)
daily_activity <- read.csv("dailyActivity_merged.csv")
daily_calories <- read.csv("dailyCalories_merged.csv")
daily_intensities <- read.csv("dailyIntensities_merged.csv")
daily_steps <- read.csv("dailySteps_merged.csv")
heartRate_secs <- read.csv("heartrate_seconds_merged.csv")
hourly_calories <- read.csv("hourlyCalories_merged.csv")
hourly_intensities <- read.csv("hourlyIntensities_merged.csv")
hourly_steps <- read.csv("hourlySteps_merged.csv")
minute_calories <- read.csv("minuteCaloriesNarrow_merged.csv")
minute_intensities <- read.csv("minuteIntensitiesNarrow_merged.csv")
sleep_day <- read.csv("sleepDay_merged.csv")
weight_info <- read.csv("weightLogInfo_merged.csv")
daily_activity
daily_activity$ActivityDate <- mdy(daily_activity$ActivityDate,tz="EST")
daily_activity
daily_activity$Day <- strftime(daily_activity$ActivityDate, format="%m-%d")
daily_activity
uniq_comb6 <- daily_activity %>% group_by(Id) %>%
summarise(n_of_counts=n_distinct(Day))
uniq_comb6
view(uniq_comb6)
daily_activity_merged <- merge(daily_activity, uniq_comb6, by="Id") %>%
filter(n_of_counts > 20)
daily_activity_merged
day_to_steps <- daily_activity_merged %>% group_by(Day) %>%
summarise(avg_steps=mean(TotalSteps)) %>%
ggplot(day_to_steps, aes(Day,avg_steps)) +
geom_bar(position='dodge',
stat='identity') +
scale_x_discrete(guide=guide_axis(angle=45)) +
labs(title="Daily Average of Steps")
day_to_steps <- daily_activity_merged %>% group_by(Day) %>%
summarise(avg_steps=mean(TotalSteps))
ggplot(day_to_steps, aes(Day,avg_steps)) +
geom_bar(position='dodge',
stat='identity') +
scale_x_discrete(guide=guide_axis(angle=45)) +
labs(title="Daily Average of Steps")
ggplot(day_to_steps, aes(Day,avg_steps)) +
geom_bar(position='dodge',
stat='identity') +
scale_x_discrete(guide=guide_axis(angle=45)) +
labs(title="Daily Average of Steps",
y="Average of steps")
day_to_activeDist <- daily_activity_merged %>%
group_by(Day) %>%
summarise(avg_activeDist=mean(VeryActiveDistance))
ggplot(day_to_activeDist, aes(Day,avg_activeDist)) +
geom_bar(position='dodge',
stat='identity') +
scale_x_discrete(guide=guide_axis(angle=45)) +
labs(title="Daily Average of Active Distance",
y="Average of Active Distance (km)")
ggplot(day_to_activeDist, aes(Day,avg_activeDist)) +
geom_smooth() +
scale_x_discrete(guide=guide_axis(angle=45)) +
labs(title="Daily Average of Active Distance",
y="Average of Active Distance (km)")
ggplot(day_to_activeDist, aes(Day,avg_activeDist)) +
geom_smooth(method="lm") +
scale_x_discrete(guide=guide_axis(angle=45)) +
labs(title="Daily Average of Active Distance",
y="Average of Active Distance (km)")
ggplot(day_to_activeDist, aes(Day,avg_activeDist)) +
geom_line(position='dodge',
stat='identity') +
scale_x_discrete(guide=guide_axis(angle=45)) +
labs(title="Daily Average of Active Distance",
y="Average of Active Distance (km)")
ggplot(day_to_activeDist, aes(Day,avg_activeDist)) +
geom_line() +
scale_x_discrete(guide=guide_axis(angle=45)) +
labs(title="Daily Average of Active Distance",
y="Average of Active Distance (km)")
ggplot(day_to_activeDist, aes(Day,avg_activeDist)) +
geom_smooth() +
scale_x_discrete(guide=guide_axis(angle=45)) +
labs(title="Daily Average of Active Distance",
y="Average of Active Distance (km)")
ggplot(day_to_activeDist, aes(Day,avg_activeDist)) +
geom_step() +
scale_x_discrete(guide=guide_axis(angle=45)) +
labs(title="Daily Average of Active Distance",
y="Average of Active Distance (km)")
ggplot(day_to_activeDist, aes(Day,avg_activeDist)) +
geom_line() +
scale_x_discrete(guide=guide_axis(angle=45)) +
labs(title="Daily Average of Active Distance",
y="Average of Active Distance (km)")
ggplot(day_to_activeDist, aes(Day,avg_activeDist)) +
geom_point() +
scale_x_discrete(guide=guide_axis(angle=45)) +
labs(title="Daily Average of Active Distance",
y="Average of Active Distance (km)")
ggplot(day_to_activeDist, aes(Day,avg_activeDist)) +
geom_point() +
geom_smooth(method="lm")
ggplot(day_to_activeDist, aes(Day,avg_activeDist)) +
geom_point() +
geom_smooth(method="lm") +
scale_x_discrete(guide=guide_axis(angle=45)) +
labs(title="Daily Average of Active Distance",
y="Average of Active Distance (km)")
ggplot(day_to_activeDist, aes(Day,avg_activeDist)) +
geom_point() +
geom_smooth(day_to_activeDist,
aes(as.Date(Day, format='%m-%d'),avg_activeDist)) +
scale_x_discrete(guide=guide_axis(angle=45)) +
labs(title="Daily Average of Active Distance",
y="Average of Active Distance (km)")
y="Average of Active Distance (km)")
ggplot(day_to_activeDist, aes(as.Date(Day,format="%m-%d",avg_activeDist))) +
geom_point() +
geom_smooth() +
scale_x_discrete(guide=guide_axis(angle=45)) +
labs(title="Daily Average of Active Distance",
y="Average of Active Distance (km)")
ggplot(day_to_activeDist,aes(Day,avg_activeDist)) +
geom_point() +
scale_x_discrete(guide=guide_axis(angle=45)) +
labs(title="Daily Average of Active Distance",
y="Average of Active Distance (km)")
day_to_activeDist$avg_activeDist
typeof(day_to_activeDist$avg_activeDist)
typeof(day_to_activeDist$Day)
day_to_activeDist$Day <- as.Date(day_to_activeDist$Day, format='%m-%d')
ggplot(day_to_activeDist,aes(Day,avg_activeDist)) +
geom_smooth() +
scale_x_discrete(guide=guide_axis(angle=45)) +
labs(title="Daily Average of Active Distance",
y="Average of Active Distance (km)")
typeof(day_to_activeDist$avg_activeDist)
ggplot(day_to_activeDist,aes(Day,avg_activeDist)) +
geom_line() +
scale_x_discrete(guide=guide_axis(angle=45)) +
labs(title="Daily Average of Active Distance",
y="Average of Active Distance (km)")
last_error()
rlang::last_error()
typeof(day_to_activeDist$Day)
ggplot(day_to_activeDist,aes(Day,avg_activeDist)) +
geom_smooth(method="glm") +
scale_x_discrete(guide=guide_axis(angle=45)) +
labs(title="Daily Average of Active Distance",
y="Average of Active Distance (km)")
day_to_activeDist$avg_activeDist <- as.integer(day_to_activeDist$avg_activeDist)
ggplot(day_to_activeDist,aes(Day,avg_activeDist)) +
geom_smooth() +
scale_x_discrete(guide=guide_axis(angle=45)) +
labs(title="Daily Average of Active Distance",
y="Average of Active Distance (km)")
ggplot(day_to_activeDist,aes(Day,avg_activeDist)) +
geom_smooth(method="lm") +
labs(title="Daily Average of Active Distance",
y="Average of Active Distance (km)")
ggplot(day_to_steps, aes(Day,avg_steps)) +
geom_smooth(method="lm") +
labs(title="Daily Average of Steps",
y="Average of steps")
day_to_steps$Day <- as.Date(day_to_steps$Day, format='%m-%d')
day_to_steps$avg_steps <- as.integer(day_to_steps$avg_steps)
ggplot(day_to_steps, aes(Day,avg_steps)) +
geom_smooth(method="lm") +
labs(title="Daily Average of Steps",
y="Average of steps")
day_to_calories <- daily_activity_merged %>%
group_by(Day) %>%
summarise(avg_calories=mean(Calories))
day_to_calories$Day <- as.Date(day_to_calories$Day, format='%m-%d')
day_to_calories$avg_calories <- as.integer(day_to_calories$avg_calories)
ggplot(day_to_calories,aes(Day,avg_calories)) +
geom_smooth(method="lm") +
labs(title="Daily Average of Calories Burned",
y="Average of Calories Burned")
